# this file is included by the Makefiles of the subdirectory. These Makefiles must set $(deps) before including this

# make sure first target depends on "all" which is defined in each of the subdirs
a: all

DUMMY_MKBINDIR := $(shell [ -d .bin ] || mkdir .bin)

# include dependencies. $(deps) is set by the sub-Makefiles
ifeq (0, $(words $(findstring $(MAKECMDGOALS), clean clean-subdir)))
  -include $(deps)
endif

#if available, use dependencies from CMSSW:
ifneq ($(shell which scram || echo -n A),A)
BOOST_INCLUDE := -I$(shell scram tool tag boost INCLUDE)
BOOST_LIBLIST := $(shell scram tool tag boost LIB) $(shell scram tool tag boost_filesystem LIB) $(shell scram tool tag boost_program_options LIB) $(shell scram tool tag boost_regex LIB)
BOOST_LIBS := -L$(shell scram tool tag boost LIBDIR) $(patsubst %,-l%,$(BOOST_LIBLIST))
SQLITE_LIBLIST := $(shell scram tool tag sqlite LIB)
SQLITE_LIBS := $(patsubst %,-l%,$(SQLITE_LIBLIST)) -L$(shell scram tool tag sqlite LIBDIR)
SQLITE_INCLUDE := -I$(shell scram tool tag sqlite INCLUDE)
else
#otherwise: assume boost is installed system-wide (i.e., include are found without special care)
BOOST_INCLUDE:=
SQLITE_INCLUDE:=
SQLITE_LIBS := -lsqlite3
#on some systems, boost libraries have a "-mt" suffix. This is a dirty hack. If you know better, tell me:
ifeq ($(shell test -e /usr/lib/libboost_system-mt.so && echo -n A),A)
BS:=-mt
else
BS:=
endif

BOOST_LIBS := -lboost_filesystem$(BS) -lboost_regex$(BS) -lboost_program_options$(BS) -lboost_thread$(BS)
endif

#lazy evaluation to allow subdirectories to add their own includes and libs ...
INCLUDES = -I.. $(BOOST_INCLUDE) $(SQLITE_INCLUDE)
EXTRA_COMPILE =
EXTRA_LINK_EXE =
EXTRA_LINK_SO =

#SUFFIXES += .d

COMPILE = echo creating $@; $(CXX) -g -c -Wall -fPIC -O3 $(INCLUDES) $(EXTRA_COMPILE)
LINK_EXE = echo linking $@; $(CXX) -Wl,-R,'$$ORIGIN/../lib' -rdynamic -L../lib -ldl -ltheta -lconfig $(SQLITE_LIBS) $(BOOST_LIBS) $(EXTRA_LINK_EXE)
#LINK_EXE_NOLIBS = echo linking $@; $(CXX) -rdynamic $(EXTRA_LINK_EXE)
LINK_SO = echo linking $@; $(CXX) -Wl,-R,'$$ORIGIN/../lib' -shared -rdynamic $(EXTRA_LINK_SO)

.bin/%.o: %.cpp
	@$(COMPILE) -o $@ $<

.bin/%.o: %.cxx
	@$(COMPILE) -o $@ $<

.bin/%.o: %.c
	@$(COMPILE) -x c -o $@ $<


.bin/%.d: %.cpp
	@$(COMPILE) -MM -MT '$(patsubst %.cpp,.bin/%.o,$<)' $< > $@

.bin/%.d: %.cxx
	@$(COMPILE) -MM -MT '$(patsubst %.cxx,.bin/%.o,$<)' $< > $@

.bin/%.d: %.c
	@$(COMPILE) -x c -MM -MT '$(patsubst %.c,.bin/%.o,$<)' $< > $@



#make clean rule depend on subdir-specific:
clean: clean-subdir
	@rm -rf .bin

.PHONY: clean clean-subdir

