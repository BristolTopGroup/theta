countingExp = {

    //define one observable named "NEvts" with range [0, 2000] in 1 bin.
    observables = {
	 NEvts = {
         	range = (0.0, 2000.0);
		nbins = 1;	
	 };
    };

    //the parameters of the model are the number of signal and
    // background events after the selection
    parameters = {
        s={
            default = 0.;//148.9;
            range = (0.0, "inf");
        };
        b_ST={
            default = 1.7;
            range = (0.0, "inf");
        };
        b_Wjets={
            default = 79.0;
            range = (0.0, "inf");
        };
        b_Zjets={
            default = 6.7;
            range = (0.0, "inf");
        };
        b_QCD={
            default = 4.1;
            range = (0.0, "inf");
        };
    };

    //specification of the "NEvts" observable
    NEvts = {
        signal = { // "signal" is a name you can choose freely here
            coefficients = ("s");
            histogram = {
                type = "fixed-poly";
                observable = "NEvts";
                normalize_to = 1.0;
		coefficients = [1.0];
            };
        };
        
        bkg_ST = {
            coefficients = ("b_ST");
            histogram = {
                type = "fixed-poly";
                observable = "NEvts";
                normalize_to = 1.0;
                coefficients = [1.0];
            };
        };

        bkg_Wjets = {
            coefficients = ("b_Wjets");
            histogram = {
                type = "fixed-poly";
                observable = "NEvts";
                normalize_to = 1.0;
                coefficients = [1.0];
            };
        };

        bkg_Zjets = {
            coefficients = ("b_Zjets");
            histogram = {
                type = "fixed-poly";
                observable = "NEvts";
                normalize_to = 1.0;
                coefficients = [1.0];
            };
        };

        bkg_QCD = {
            coefficients = ("b_QCD");
            histogram = {
                type = "fixed-poly";
                observable = "NEvts";
                normalize_to = 1.0;
                coefficients = [1.0];
            };
        };


    };

    constraints = {
        c_ST = { // the name "c" can be chosen at will
            type = "gauss";
            parameters = ("b_ST");
            mean = [1.7];
            // covariance matrix as list of arrays, i.e. 3x3 matrix = ([],[],[]):
            covariance = ([200.0]);
        };
        c_Wjets = { // the name "c" can be chosen at will
            type = "gauss";
            parameters = ("b_Wjets");
            mean = [79.0];
            // covariance matrix as list of arrays, i.e. 3x3 matrix = ([],[],[]):
            covariance = ([200.0]);
        };
        c_Zjets = { // the name "c" can be chosen at will
            type = "gauss";
            parameters = ("b_Zjets");
            mean = [6.7];
            // covariance matrix as list of arrays, i.e. 3x3 matrix = ([],[],[]):
            covariance = ([200.0]);
        };
        c_QCD = { // the name "c" can be chosen at will
            type = "gauss";
            parameters = ("b_QCD");
            mean = [4.1];
            // covariance matrix as list of arrays, i.e. 3x3 matrix = ([],[],[]):
            covariance = ([200.0]);
        };

    };

};




//generate likelihood ratio test statistics by minimizing all
// but the specified parameters (which are fixed) and saving the ratio as result.
hypotest = {
    type = "deltanll-hypotest";
    minimizer = "myminuit";
    background-only = {s = 0.0;};
    signal-plus-background = {};
};

myminuit = {
   type = "root-minuit";
};




toy-run = {
   type = "plain";
   
   //model to use for pseudo data generation and to pass to the producers:
   model = "countingExp";

   //name of producers to run:
   producers = ("hypotest");

   //number of PE to run
   n-events = 5000000;

   //set the random seed
   seed     = 10815;
   
   result-file = "result/abcd.db";

};



plugins = {
  files = ("lib/core-plugins.so", "lib/root.so");
};

