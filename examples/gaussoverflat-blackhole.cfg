observables = {
   mass = {
       range = (500.0, 1500.0);
       nbins = 200;
   };
};
     
parameters = ("s", "b");

gaussoverflat = {
    mass = {
        signal = {
            coefficient-function = {type = "mult"; parameters = ("s");};
            histogram = {
                type = "fixed_gauss";
                observable = "mass";
                normalize_to = 1.0;
                mean = 1000.0;
                width = 250.0;
            };
        };
        
        //flat background:
        bkg = {
            coefficient-function = {type = "mult"; parameters = ("b"); };
            histogram = {
                type = "fixed_poly";
                observable = "mass";
                normalize_to = 1.0;
                coefficients = [1.0];
            };
        };
    };

    parameter-distribution = {
        type ="product_distribution";
        distributions =("@b-dist",
            {
             type = "flat_distribution";
             s = {
                range = (0.0, "inf");
                fix-sample-value = 200.0;
            };
        });
    };
};

b-dist = {
             type = "gauss";
             parameter = "b";
             mean = 1000.0;
             width = 200.0;
             range = (0.0, "inf");
            };

delta-s-zero = {
   type = "delta_distribution";
   s = 0.0;
};

hypotest = {
    type = "deltanll_hypotest";
    name = "hypotest";
    minimizer = "@myminuit";
    background-only-distribution = {
         type = "product_distribution";
         distributions=("@b-dist", "@delta-s-zero");
    };
    signal-plus-background-distribution = "@gaussoverflat.parameter-distribution";
};

myminuit = {
   type = "root_minuit";
};

main = {
   data_source = {
       name = "data_source";
       type = "model_source";
       model = "@gaussoverflat";
   };
   model = "@gaussoverflat";
   producers = ("@hypotest");
   n-events = 1000;
   output_database = {
        type = "blackhole_database";
    };
};

options = {
  plugin_files = ("lib/core-plugins.so", "lib/root.so");
};

