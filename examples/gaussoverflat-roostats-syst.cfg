//define one obervable named "mass" with range [500, 1500] and 200 bins.
observables = {
   mass = {
       range = (0.0, 500.0);
       nbins = 100;
   };
};
     
//the parameters of the model are the number of signal and
// background events after the selection
parameters = {
    s={
        default = 1000.0;
        range = (0.0, "inf");
    };
    b={
        default = 1000.0;
        range = (0.0, "inf");
    };
    delta_E = {
        default = 0.0;
        range = ("-inf", "inf");
    };
};



sig_nominal = {
    type = "fixed_gauss";
    observable = "mass";
    normalize_to = 1.0;
    mean = 200.0;
    width = 50.0;
};

sig_minus = {
    type = "fixed_gauss";
    observable = "mass";
    normalize_to = 0.9;
    mean = 185.0;
    width = 50.0;
};

sig_plus = {
    type = "fixed_gauss";
    observable = "mass";
    normalize_to = 1.1;
    mean = 215.0;
    width = 50.0;
};

gaussoverflat-syst = {
    //specification of the "mass" observable
    mass = {
        //gaussian signal:
        signal = { // "signal" is a name you can choose freely here
            coefficients = ("s");
            histogram = {
                type = "interpolating_histo";
                parameters = ("delta_E");
                nominal-histogram = "@sig_nominal";
                delta_E-plus-histogram = "@sig_plus";
                delta_E-minus-histogram = "@sig_minus";
            };
        };
        
        //flat background:
        bkg = {
            coefficients = ("b");
            histogram = {
                type = "fixed_poly";
                observable = "mass";
                normalize_to = 1.0;
                //coefficients of the polynomial, starting with x^0
                coefficients = [1.0];
            };
        };
    };

    constraints = {
        c = {
            type = "gauss";
            parameter = "b";
            mean = 1000.0;
            width = 200.0;
        };
        delta_E-prior = {
            type = "gauss";
            parameter = "delta_E";
            mean = 0.0;
            width = 1.0;
        };
    };
};

gaussoverflat-nosyst = {
    mass = {
        signal = {
            coefficients = ("s");
            histogram = "@sig_nominal";
        };
        
        //flat background:
        bkg = {
            coefficients = ("b");
            histogram = {
                type = "fixed_poly";
                observable = "mass";
                normalize_to = 1.0;
                //coefficients of the polynomial, starting with x^0
                coefficients = [1.0];
            };
        };
    };

    constraints = {
        c = {
            type = "gauss";
            parameter = "b";
            mean = 1000.0;
            width = 200.0;
        };
    };
};


//generate likelihood ratio test statistics by minimizing all
// but the specified parameters (which are fixed) and saving the ratio as result.
hypotest = {
    type = "deltanll_hypotest";
    minimizer = "@myminuit";
    background-only = {s = 0.0;};
    signal-plus-background = {};
};

myminuit = {
   type = "root_minuit";
};

main = {
   type = "plain_run";
   
   //model to use for pseudo data generation and to pass to the producers:
   model-pseudodata = "@gaussoverflat-syst";
   model-producers = "@gaussoverflat-nosyst";

   //name of producers to run:
   producers = ("@hypotest");

   //number of PE to run
   n-events = 1000;
   
   result-file = "gaussoverflat-result.db";
};

plugins = {
  files = ("lib/core-plugins.so", "lib/root.so");
};
